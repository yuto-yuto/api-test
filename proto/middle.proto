syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "api-test/grpc/apitest";

service Middle {
  // Unary RPC
  rpc Ping(PingRequest) returns (PingResponse) {}
  // Unary RPC
  rpc SayHello(HelloRequest) returns (HelloResponse) {}
  // Server Streaming RPC
  rpc Download(DownloadRequest) returns (stream DownloadResponse) {}
  // Client Streaming RPC
  rpc Upload(stream UploadRequest) returns (UploadResponse) {}
  // Bidirectional Streaming RPC
  rpc Communicate(stream CommunicateRequest)
      returns (stream CommunicateResponse) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloResponse {
  string message = 1;
}

message PingRequest {}

message PingResponse {
  google.protobuf.Timestamp timestamp = 1;
}

message DownloadRequest {
  string filename = 1;
}

message DownloadResponse {
  string line = 1;
}

message UploadRequest {
  string filename = 1;
  bytes chunk = 2;
}

message UploadResponse {
  bool result = 1;
  int64 writtenSize = 2;
  string message = 3;
}

enum CommunicationType {
  COMMUNICATION_TYPE_UNSPECIFIED = 0;
  COMMUNICATION_TYPE_PING_PONG = 1;
  COMMUNICATION_TYPE_MESSAGE = 2;
  COMMUNICATION_TYPE_END_REQUEST = 3;
}

message CommunicateRequest {
  int64 max = 1;
  int64 value = 2;
}

message CommunicateResponse {
  int64 currentCount = 1;
  int64 value = 2;
}
